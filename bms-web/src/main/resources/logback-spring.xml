<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <property name="logPath" value="/data/cmmg_logs/"/>
    <property name="serverName" value="cmmg"/>
    <contextName>${logPath}</contextName>
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>
    <appender name="rollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logPath}/${serverName}.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logPath}/${serverName}.%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <maxHistory>1825</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>50MB</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
    </appender>
    <appender name="errorFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logPath}/${serverName}.error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${logPath}/${serverName}.error.%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <maxHistory>1825</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>50MB</MaxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder>
            <pattern>%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>

    <!-- 异步输出 -->
    <appender name="asyncRollingFile" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!--耗费性能  默认不开启-->
        <includeCallerData>false</includeCallerData>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="rollingFile"/>
    </appender>

    <!-- 异步输出 -->
    <appender name="asyncErrorFile" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>512</queueSize>
        <!--耗费性能  默认不开启-->
        <includeCallerData>false</includeCallerData>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="errorFile"/>
    </appender>

    <logger name="com.cl" level="DEBUG"/>
    <logger name="com.cl.cm" level="DEBUG"/>
    <!-- show parameters for mybatis sql -->
    <logger name="log4j.logger.com.ibatis" level="DEBUG" />
    <logger name="log4j.logger.com.ibatis.common.jdbc.SimpleDataSource" level="DEBUG" />
    <logger name="log4j.logger.com.ibatis.common.jdbc.ScriptRunner" level="DEBUG" />
    <logger name="log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate" level="DEBUG" />
    <logger name="log4j.logger.java.sql.Connection" level="DEBUG" />
    <logger name="log4j.logger.java.sql.Statement" level="DEBUG" />
    <logger name="log4j.logger.java.sql.PreparedStatement" level="DEBUG" />

    <logger name="org.springframework" level="INFO"/>

    <root level="INFO">
        <appender-ref ref="console"/>
        <appender-ref ref="asyncRollingFile"/>
        <appender-ref ref="asyncErrorFile"/>
    </root>
    <!-- 配置开启 JMXConfigurator,通过jconsle等工具可以查看配置 -->
    <jmxConfigurator />
</configuration>
